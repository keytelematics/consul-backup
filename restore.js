// Generated by CoffeeScript 1.8.0
var argv, consul, file, files, fs, http, path, url, usage, walk, _fn, _i, _len;

usage = "\nUsage: consul-restore [consul http address]\n\n  Copy the current directory's files and folders into consul's key value store\n";

argv = process.argv.slice(2);

if (argv.length !== 1) {
  console.error(usage);
  process.exit(1);
}

consul = argv[0];

path = require('path');

fs = require('fs');

url = require('url');

http = require('http');

walk = function(dir) {
  var file, results, stat, _i, _len, _ref;
  results = [];
  _ref = fs.readdirSync(dir);
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    file = _ref[_i];
    file = "" + dir + "/" + file;
    stat = fs.statSync(file);
    if (stat && stat.isDirectory()) {
      results.push({
        file: "" + file + "/",
        content: null
      });
      results = results.concat(walk(file));
    } else {
      results.push({
        file: file,
        content: fs.readFileSync(file)
      });
    }
  }
  return results;
};

files = walk(process.cwd());

_fn = function(file) {
  var params, req;
  params = url.parse("http://" + consul + "/v1/kv/" + file.key);
  params.method = 'PUT';
  req = http.request(params, function(res) {
    if (res.statusCode !== 200) {
      return console.error("" + res.statusCode + " " + file.key);
    }
    res.setEncoding('utf8');
    return res.on('data', function(chunk) {
      return console.log(file.key);
    });
  });
  req.on('error', console.error);
  if (file.content != null) {
    req.write(file.content);
  }
  return req.end();
};
for (_i = 0, _len = files.length; _i < _len; _i++) {
  file = files[_i];
  file.key = file.file.slice(process.cwd().length + 1);
  _fn(file);
}
